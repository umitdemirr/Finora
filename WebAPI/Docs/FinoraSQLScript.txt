
CREATE DATABASE "Finora";
\c "Finora"


CREATE TABLE "Users" (
    "Id" SERIAL PRIMARY KEY,
    "FirstName" VARCHAR(100) NOT NULL,
    "LastName" VARCHAR(100) NOT NULL,
    "Mail" VARCHAR(255) UNIQUE NOT NULL,
    "PasswordHash" BYTEA NOT NULL,
    "PasswordSalt" BYTEA NOT NULL,
    "Status" BOOLEAN NOT NULL DEFAULT TRUE,
    "CreateAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "UpdateAt" TIMESTAMP NULL
);
CREATE TABLE "OperationClaims" (
    "Id" SERIAL PRIMARY KEY,
    "Name" VARCHAR(100) NOT NULL UNIQUE,
    "Description" TEXT
);
CREATE TABLE "UserOperationClaims" (
    "Id" SERIAL PRIMARY KEY,
    "UserId" INT NOT NULL REFERENCES "User"("Id") ON DELETE CASCADE,
    "OperationClaimId" INT NOT NULL REFERENCES "OperationClaim"("Id") ON DELETE CASCADE
);
CREATE TABLE "BanksAndExchanges" (
    "Id" SERIAL PRIMARY KEY,
    "Name" VARCHAR(255) NOT NULL,
    "Type" VARCHAR(50) NOT NULL,
    "Country" VARCHAR(100) NOT NULL,
    "IsActive" BOOLEAN NOT NULL
);
CREATE TABLE "BankAccounts" (
    "Id" SERIAL PRIMARY KEY,
    "UserId" INT NOT NULL,
    "BankId" INT NOT NULL REFERENCES "BanksAndExchanges"("Id"),
    "AccountNo" VARCHAR(50) UNIQUE NOT NULL,
    "Currency" VARCHAR(10) NOT NULL,
    "Balance" DECIMAL(18,2) NOT NULL,
    "CreatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "UpdatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE "BankCards" (
    "Id" SERIAL PRIMARY KEY,
    "UserId" INT NOT NULL,
    "BankId" INT NOT NULL REFERENCES "BanksAndExchanges"("Id"),
    "CardType" VARCHAR(50) NOT NULL,
    "CardNumber" VARCHAR(20) UNIQUE NOT NULL,
    "ExpiryDate" VARCHAR(10) NOT NULL,
    "CVV" VARCHAR(5) NOT NULL,
    "IsActive" BOOLEAN NOT NULL,
    "CreatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "UpdatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE "BankTransactions" (
    "Id" SERIAL PRIMARY KEY,
    "AccountId" INT NOT NULL REFERENCES "BankAccounts"("Id"),
    "Type" VARCHAR(50) NOT NULL,
    "Amount" DECIMAL(18,2) NOT NULL,
    "Currency" VARCHAR(10) NOT NULL,
    "Description" TEXT,
    "Date" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE "ExchangeRates" (
    "Id" SERIAL PRIMARY KEY,
    "BaseCurrency" VARCHAR(10) NOT NULL,
    "TargetCurrency" VARCHAR(10) NOT NULL,
    "Rate" DECIMAL(18,6) NOT NULL,
    "Date" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE "Inflations" (
    "Id" SERIAL PRIMARY KEY,
    "Country" VARCHAR(100) NOT NULL,
    "Year" INT NOT NULL,
    "Month" INT NOT NULL,
    "InflationRate" DECIMAL(5,2) NOT NULL
);
CREATE TABLE "StockAccounts" (
    "Id" SERIAL PRIMARY KEY,
    "UserId" INT NOT NULL,
    "ExchangeId" INT NOT NULL REFERENCES "BanksAndExchanges"("Id"),
    "AccountNo" VARCHAR(50) UNIQUE NOT NULL,
    "Balance" DECIMAL(18,2) NOT NULL,
    "Currency" VARCHAR(10) NOT NULL,
    "CreatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "UpdatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE "Portfolios" (
    "Id" SERIAL PRIMARY KEY,
    "StockAccountId" INT NOT NULL REFERENCES "StockAccount"("Id"),
    "StockSymbol" VARCHAR(10) NOT NULL,
    "Quantity" INT NOT NULL,
    "AveragePrice" DECIMAL(18,2) NOT NULL,
    "UpdatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE "StockTransaction" (
    "Id" SERIAL PRIMARY KEY,
    "StockAccountId" INT NOT NULL REFERENCES "StockAccount"("Id"),
    "StockSymbol" VARCHAR(10) NOT NULL,
    "Type" VARCHAR(10) NOT NULL,
    "Price" DECIMAL(18,2) NOT NULL,
    "Quantity" INT NOT NULL,
    "Date" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE "CreditCards" (
    "Id" SERIAL PRIMARY KEY,
    "UserId" INT NOT NULL REFERENCES "Users"("Id"),
    "BankId" INT NOT NULL REFERENCES "BanksAndExchanges"("Id"),
	"Name" VARCHAR(50) NOT NULL,
    "Provider" VARCHAR(50) NOT NULL,
    "CardNumber" VARCHAR(20) UNIQUE NOT NULL,
    "ExpiryDate" VARCHAR(10) NOT NULL,
    "CVV" VARCHAR(5) NOT NULL,
	"Limit" MONEY NOT NULL,
	"AvaliableLimit" MONEY NOT NULL,
    "IsActive" BOOLEAN NOT NULL,
    "CreatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "UpdatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


-- "User" tablosuna veri ekleme
INSERT INTO "Users" ("FirstName", "LastName", "Mail", "PasswordHash", "PasswordSalt", "Status") VALUES
('Ahmet', 'Yılmaz', 'ahmet.yilmaz@example.com', '\x1234abcd', '\x5678ef12', TRUE),
('Ayşe', 'Kara', 'ayse.kara@example.com', '\x2345bcde', '\x6789fa34', TRUE),
('Mehmet', 'Demir', 'mehmet.demir@example.com', '\x3456cdef', '\x7890ab56', TRUE),
('Fatma', 'Şahin', 'fatma.sahin@example.com', '\x4567def0', '\x8901bc78', TRUE),
('Ali', 'Çelik', 'ali.celik@example.com', '\x5678ef01', '\x9012cd90', TRUE),
('Zeynep', 'Öztürk', 'zeynep.ozturk@example.com', '\x6789f012', '\x0123de12', TRUE),
('Emre', 'Aslan', 'emre.aslan@example.com', '\x7890ab23', '\x1234ef34', TRUE),
('Hülya', 'Gül', 'hulya.gul@example.com', '\x8901bc34', '\x2345fa56', TRUE),
('Kerem', 'Taş', 'kerem.tas@example.com', '\x9012cd45', '\x3456ab78', TRUE),
('Merve', 'Aksoy', 'merve.aksoy@example.com', '\x0123de56', '\x4567bc90', TRUE);


-- "OperationClaim" tablosuna veri ekleme
INSERT INTO "OperationClaims" ("Name", "Description") VALUES
('Yönetici', 'Yönetici yetkileri'),
('Kullanıcı', 'Standart kullanıcı yetkileri'),
('Editör', 'İçerik düzenleme yetkileri'),
('Gözlemci', 'Salt okunur erişim'),
('Müdür', 'Yönetimsel yetkiler'),
('Analist', 'Analitik erişim yetkileri'),
('Denetçi', 'Denetim yetkileri'),
('Finans', 'Finansal verilere erişim yetkileri'),
('Destek', 'Destek ekibi yetkileri'),
('Geliştirici', 'Geliştirici erişimi');

-- "BanksAndExchanges" tablosuna veri ekleme
INSERT INTO "BanksAndExchanges" ("Name", "Type", "Country", "IsActive") VALUES
('Merkez Bankası', 'Banka', 'Türkiye', TRUE),
('Global Finans', 'Banka', 'Almanya', TRUE),
('Borsa İstanbul', 'Borsa', 'Türkiye', TRUE),
('Güven Bankası', 'Banka', 'Fransa', TRUE),
('Küresel Borsa', 'Borsa', 'Kanada', TRUE),
('Ulusal Banka', 'Banka', 'Japonya', TRUE),
('Ticaret Borsası', 'Borsa', 'Avustralya', TRUE),
('Birlik Bankası', 'Banka', 'Hindistan', TRUE),
('Metro Borsası', 'Borsa', 'Çin', TRUE),
('Yenilikçi Banka', 'Banka', 'Brezilya', TRUE);

-- "BankAccounts" tablosuna veri ekleme
INSERT INTO "BankAccounts" ("UserId", "BankId", "AccountNo", "Currency", "Balance") VALUES
(1, 1, 'TR1234567890', 'TRY', 10000.50),
(2, 2, 'TR0987654321', 'EUR', 2000.75),
(3, 3, 'TR1111222233', 'USD', 500.00),
(4, 4, 'TR4444555566', 'TRY', 7500.30),
(5, 5, 'TR7777888899', 'GBP', 100.00),
(6, 6, 'TR9999000011', 'JPY', 500000.25),
(7, 7, 'TR2222333344', 'AUD', 1500.90),
(8, 8, 'TR5555666677', 'INR', 3000.10),
(9, 9, 'TR8888999900', 'CNY', 7000.45),
(10, 10, 'TR3333444455', 'BRL', 1200.60);

-- "BankCards" tablosuna veri ekleme
INSERT INTO "BankCards" ("UserId", "BankId", "CardType", "CardNumber", "ExpiryDate", "CVV", "IsActive") VALUES
(1, 1, 'Kredi Kartı', '1111222233334444', '12/25', '123', TRUE),
(2, 2, 'Banka Kartı', '2222333344445555', '11/26', '456', TRUE),
(3, 3, 'Kredi Kartı', '3333444455556666', '10/27', '789', TRUE),
(4, 4, 'Banka Kartı', '4444555566667777', '09/28', '321', TRUE),
(5, 5, 'Kredi Kartı', '5555666677778888', '08/29', '654', TRUE),
(6, 6, 'Banka Kartı', '6666777788889999', '07/30', '987', TRUE),
(7, 7, 'Kredi Kartı', '7777888899990000', '06/31', '234', TRUE),
(8, 8, 'Banka Kartı', '8888999900001111', '05/32', '567', TRUE),
(9, 9, 'Kredi Kartı', '9999000011112222', '04/33', '890', TRUE),
(10, 10, 'Banka Kartı', '0000111122223333', '03/34', '345', TRUE);

-- "BankTransactions" tablosuna veri ekleme
INSERT INTO "BankTransactions" ("AccountId", "Type", "Amount", "Currency", "Description") VALUES
(1, 'Para Yatırma', 5000.00, 'TRY', 'Hesaba para yatırıldı'),
(2, 'Para Çekme', 200.00, 'EUR', 'ATM’den para çekildi'),
(3, 'Havale', 100.00, 'USD', 'Başka bir hesaba havale yapıldı'),
(4, 'Ödeme', 750.00, 'TRY', 'Fatura ödendi'),
(5, 'Para Yatırma', 300.00, 'GBP', 'Şubeden para yatırıldı'),
(6, 'Para Çekme', 2500.00, 'JPY', 'Hesaptan para çekildi'),
(7, 'Havale', 150.00, 'AUD', 'Başka hesaba gönderim yapıldı'),
(8, 'Ödeme', 400.00, 'INR', 'Kredi kartı borcu ödendi'),
(9, 'Para Yatırma', 6000.00, 'CNY', 'Hesaba para aktarıldı'),
(10, 'Para Çekme', 800.00, 'BRL', 'ATM’den nakit çekildi');

-- "ExchangeRates" tablosuna veri ekleme
INSERT INTO "ExchangeRates" ("BaseCurrency", "TargetCurrency", "Rate") VALUES
('USD', 'TRY', 23.45),
('EUR', 'TRY', 25.30),
('GBP', 'TRY', 28.75),
('JPY', 'TRY', 0.18),
('AUD', 'TRY', 15.60),
('CNY', 'TRY', 3.45),
('INR', 'TRY', 0.28),
('BRL', 'TRY', 5.75),
('USD', 'EUR', 0.92),
('GBP', 'EUR', 1.12);

-- "Inflation" tablosuna veri ekleme
INSERT INTO "Inflations" ("Country", "Year", "Month", "InflationRate") VALUES
('Türkiye', 2025, 1, 8.5),
('Türkiye', 2025, 2, 8.8),
('Türkiye', 2025, 3, 9.0),
('Almanya', 2025, 1, 2.3),
('Fransa', 2025, 2, 2.8),
('Japonya', 2025, 3, 1.6),
('Kanada', 2025, 1, 3.5),
('Avustralya', 2025, 2, 4.0),
('Hindistan', 2025, 3, 5.2),
('Çin', 2025, 1, 2.9);

-- "StockAccount" tablosuna veri ekleme
INSERT INTO "StockAccounts" ("UserId", "ExchangeId", "AccountNo", "Balance", "Currency") VALUES
(1, 3, 'TR9876543210', 1500.00, 'TRY'),
(2, 5, 'TR1122334455', 2000.00, 'EUR'),
(3, 7, 'TR5566778899', 1000.00, 'USD'),
(4, 3, 'TR2233445566', 2500.00, 'TRY'),
(5, 5, 'TR6677889900', 3000.00, 'GBP'),
(6, 7, 'TR7788990011', 4000.00, 'JPY'),
(7, 3, 'TR8899001122', 500.00, 'AUD'),
(8, 5, 'TR9900112233', 800.00, 'CNY'),
(9, 7, 'TR0011223344', 1200.00, 'INR'),
(10, 3, 'TR3344556677', 700.00, 'BRL');

-- "Portfolios" tablosuna veri ekleme
INSERT INTO "Portfolios" ("StockAccountId", "StockSymbol", "Quantity", "AveragePrice") VALUES
(1, 'XYZ', 100, 15.50),
(2, 'ABC', 200, 23.00),
(3, 'DEF', 150, 18.75),
(4, 'GHI', 75, 25.60),
(5, 'JKL', 50, 30.40),
(6, 'MNO', 125, 12.90),
(7, 'PQR', 300, 8.75),
(8, 'STU', 200, 20.50),
(9, 'VWX', 100, 13.60),
(10, 'YZA', 75, 10.80);

-- "StockTransaction" tablosuna veri ekleme
INSERT INTO "StockTransaction" ("StockAccountId", "StockSymbol", "Type", "Price", "Quantity") VALUES
(1, 'XYZ', 'Satın Alma', 15.50, 100),
(2, 'ABC', 'Satış', 23.00, 50),
(3, 'DEF', 'Satın Alma', 18.75, 75),
(4, 'GHI', 'Satış', 25.60, 25),
(5, 'JKL', 'Satın Alma', 30.40, 50),
(6, 'MNO', 'Satış', 12.90, 125),
(7, 'PQR', 'Satın Alma', 8.75, 300),
(8, 'STU', 'Satış', 20.50, 200),
(9, 'VWX', 'Satın Alma', 13.60, 100),
(10, 'YZA', 'Satış', 10.80, 75);

-- "UserOperationClaim" tablosuna veri ekleme
INSERT INTO "UserOperationClaim" ("UserId", "OperationClaimId") VALUES
(1, 1), -- Ahmet Yılmaz -> Yönetici
(2, 2), -- Ayşe Kara -> Kullanıcı
(3, 2), -- Mehmet Demir -> Kullanıcı
(4, 3), -- Fatma Şahin -> Editör
(5, 4), -- Ali Çelik -> Gözlemci
(6, 5), -- Zeynep Öztürk -> Müdür
(7, 6), -- Emre Aslan -> Analist
(8, 7), -- Hülya Gül -> Denetçi
(9, 8), -- Kerem Taş -> Finans
(10, 9); -- Merve Aksoy -> Destek